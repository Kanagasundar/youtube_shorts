name: Daily YouTube Automation

on:
  schedule:
    - cron: '0 4 * * *'  # Daily at 6 AM UTC
  workflow_dispatch:      # Allow manual trigger

jobs:
  run-automation:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      YOUTUBE_CLIENT_ID: ${{ secrets.YOUTUBE_CLIENT_ID }}
      YOUTUBE_CLIENT_SECRET: ${{ secrets.YOUTUBE_CLIENT_SECRET }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üêç Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üß∞ Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ffmpeg \
            imagemagick \
            espeak \
            espeak-data \
            libespeak1 \
            libespeak-dev \
            portaudio19-dev \
            python3-pyaudio

      - name: ‚öôÔ∏è Configure ImageMagick policy
        run: |
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml || true
          sudo sed -i 's/rights="none" pattern="PS"/rights="read|write" pattern="PS"/' /etc/ImageMagick-6/policy.xml || true
          sudo sed -i 's/rights="none" pattern="EPS"/rights="read|write" pattern="EPS"/' /etc/ImageMagick-6/policy.xml || true
          sudo sed -i 's/rights="none" pattern="LABEL"/rights="read|write" pattern="LABEL"/' /etc/ImageMagick-6/policy.xml || true
          sudo sed -i 's/rights="none" pattern="URL"/rights="read|write" pattern="URL"/' /etc/ImageMagick-6/policy.xml || true
          sudo sed -i 's/rights="none" pattern="TEXT"/rights="read|write" pattern="TEXT"/' /etc/ImageMagick-6/policy.xml || true
          sudo sed -i 's/rights="none" pattern="CAPTION"/rights="read|write" pattern="CAPTION"/' /etc/ImageMagick-6/policy.xml || true
          sudo sed -i '/<policy domain="path" rights="none" pattern="@\*"\/>/d' /etc/ImageMagick-6/policy.xml || true

      - name: üìÅ Create output directory
        run: mkdir -p output

      - name: üì¶ Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            moviepy==1.0.3 \
            imageio-ffmpeg \
            gTTS \
            openai>=1.0.0 \
            pillow \
            flask \
            google-api-python-client \
            google-auth-httplib2 \
            google-auth-oauthlib \
            decorator \
            proglog \
            mutagen \
            pydub

      - name: üîç Verify critical imports
        run: |
          python -c 'import sys
          from openai import OpenAI
          try:
              import moviepy.editor as mp; print("‚úÖ MoviePy imported successfully")
              from gtts import gTTS; print("‚úÖ gTTS imported successfully")
              import openai; print("‚úÖ OpenAI imported successfully, version:", openai.__version__)
              from PIL import Image; print("‚úÖ PIL imported successfully")
              from googleapiclient.discovery import build; print("‚úÖ Google API client imported successfully")
          except Exception as e:
              print("‚ùå Import error:", e)
              sys.exit(1)'

      - name: üîê Validate environment variables
        run: |
          python -c 'import os, sys
          required = ["OPENAI_API_KEY"]
          optional = ["YOUTUBE_CLIENT_ID", "YOUTUBE_CLIENT_SECRET", "GOOGLE_API_KEY"]
          missing = [v for v in required if not os.getenv(v)]
          if missing:
              print("‚ùå Missing required environment variables:", missing)
              sys.exit(1)
          else:
              print("‚úÖ Required environment variables found")
          missing_opt = [v for v in optional if not os.getenv(v)]
          if missing_opt:
              print("‚ö†Ô∏è Missing optional environment variables:", missing_opt)
          else:
              print("‚úÖ All optional environment variables found")'

      - name: üß™ Test utility module imports
        run: |
          python -c 'import sys
          try:
              from utils.topic_rotator import get_today_topic; print("‚úÖ topic_rotator imported")
              from utils.scripting import generate_script; print("‚úÖ scripting imported")
              from utils.voice import generate_voice; print("‚úÖ voice imported")
              from utils.video import create_video; print("‚úÖ video imported")
              from utils.thumbnail_generator import generate_thumbnail; print("‚úÖ thumbnail_generator imported")
          except Exception as e:
              print("‚ùå Module import error:", e)
              sys.exit(1)'

      - name: üöÄ Run Main Script
        run: python3 main.py

      - name: üì§ Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: |
            output/
            *.log

      - name: üì• Upload generated content
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: generated-content
          path: output/
          retention-days: 7